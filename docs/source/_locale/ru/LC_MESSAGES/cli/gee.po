
msgid ""
msgstr ""
"Project-Id-Version:  sepal-doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-20 00:12+0000\n"
"PO-Revision-Date: 2023-01-21 16:20+0000\n"
"Last-Translator: \n"
"Language: ru_RU\n"
"Language-Team: Russian\n"
"Plural-Forms: nplurals=4; plural=((n%10==1 && n%100!=11) ? 0 : ((n%10 >= "
"2 && n%10 <=4 && (n%100 < 12 || n%100 > 14)) ? 1 : ((n%10 == 0 || (n%10 "
">= 5 && n%10 <=9)) || (n%100 >= 11 && n%100 <= 14)) ? 2 : 3));\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../source/cli/gee.rst:2
msgid "GEE"
msgstr ""

#: ../../source/cli/gee.rst:4
msgid ""
"The **Google Earth Engine (GEE)** tool is a utility program that allows "
"you to manage Google Earth Engine (GEE) assets and tasks from the command"
" line."
msgstr ""

#: ../../source/cli/gee.rst:6
msgid ""
"The tool is installed automatically when you install the Python API. To "
"check whether it is installed and functioning correctly, enter the "
"following in a command line:"
msgstr ""

#: ../../source/cli/gee.rst:12
msgid ""
"If the tool is properly installed, it will display a short summary of "
"available commands. To get help on a specific command, use:"
msgstr ""

#: ../../source/cli/gee.rst:18
msgid ""
"When you first install the Python API, you will need to log in using the "
":code:`Authenticate` command, as described below."
msgstr ""

#: ../../source/cli/gee.rst:21
msgid "Available commands"
msgstr ""

#: ../../source/cli/gee.rst:23
msgid ""
"More information on the available command can be found on the `Google API"
" website <https://developers.google.com/earth-"
"engine/guides/command_line>`__."
msgstr ""

#: ../../source/cli/gee.rst:46
msgid "Use GEE in the Jupyter interface"
msgstr ""

#: ../../source/cli/gee.rst:48
msgid ""
"We highly suggest working directly from the Python interface of GEE, as "
"Python has been extended by the community (gee_tools, geemap, ipygee, "
"sepal_ui, etc.) and is more user-friendly."
msgstr ""

#: ../../source/cli/gee.rst:50
msgid ""
"It's also the best way to prototype a script before using it in a SEPAL "
"application, as the translation from Python to Javascript is not always "
"straightforward."
msgstr ""

#: ../../source/cli/gee.rst:52
msgid "The main advantages of the **GEE code editor** are:"
msgstr ""

#: ../../source/cli/gee.rst:54
msgid "the access to a live map"
msgstr ""

#: ../../source/cli/gee.rst:55
msgid "the value inspector"
msgstr ""

#: ../../source/cli/gee.rst:57
msgid ""
"SEPAL and JupyterLab can help you bring this to the next level by "
"providing both tools in a Python notebook, allowing you to also access "
"all Python geospatial tools created by the Earth observation community."
msgstr ""

#: ../../source/cli/gee.rst:59
msgid "First, open a JupyterLab instance and start a notebook."
msgstr ""

#: ../../source/cli/gee.rst:61
msgid ""
"In the first cell, create a map and place it the sidecar by running the "
"following code:"
msgstr ""

#: ../../source/cli/gee.rst:76
msgid ""
"As displayed in the previous image, the list of available sidecars is "
"displayed on the right side of the frame. You can create as many sidecars"
" as you want and display any widget in it. We chose to use the **sepal_ui"
" mapping** widget as it includes key features, such as:"
msgstr ""

#: ../../source/cli/gee.rst:78
msgid "GEE full compatibility"
msgstr ""

#: ../../source/cli/gee.rst:79
msgid "an extended layer manager"
msgstr ""

#: ../../source/cli/gee.rst:80
msgid "a value inspector"
msgstr ""

#: ../../source/cli/gee.rst:82
msgid ""
"The map will be displayed in a sidecar next to the notebook. It is "
"running live, so you can add extra layers to it in any cell. Also, it is "
"more powerful than the **Code editor map** as you don't need to run all "
"your cells again to update the map."
msgstr ""

#: ../../source/cli/gee.rst:87
msgid ""
"Now you are all set to create your own **GEE script** â€“ you can use the "
"**GEE Python API documentation** to get started."
msgstr ""

#~ msgid "Google Earth Engine"
#~ msgstr ""

#~ msgid ""
#~ "The earthengine tool is a utility "
#~ "program that allows you to manage "
#~ "Earth Engine assets and tasks from "
#~ "the command line. It is installed "
#~ "automatically when you install the "
#~ "Python API. To check whether the "
#~ "tool is installed and functioning "
#~ "correctly, type the following on a "
#~ "command line:"
#~ msgstr ""

#~ msgid ""
#~ "If the tool is properly installed "
#~ "then it will print out a short "
#~ "summary of available commands. To get"
#~ " help on a specific command, use:"
#~ msgstr ""

#~ msgid ""
#~ "When you first install the Python "
#~ "API you will need to log in "
#~ "using the :code:`authenticate` command "
#~ "described below."
#~ msgstr ""

#~ msgid "available commands"
#~ msgstr ""

#~ msgid ""
#~ "More information on the available "
#~ "command can be found on `Google "
#~ "API website <https://developers.google.com/earth-"
#~ "engine/guides/command_line>`__."
#~ msgstr ""

